// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nnf_pbtypes.proto

#include "nnf_pbtypes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace nnfusion {
namespace serialize {
}  // namespace serialize
}  // namespace nnfusion
namespace protobuf_nnf_5fpbtypes_2eproto {
void InitDefaults() {
}

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "nnf_pbtypes.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021nnf_pbtypes.proto\022\022nnfusion.serialize*"
      "\301\001\n\006PBType\022\016\n\nDT_INVALID\020\000\022\013\n\007DT_BOOL\020\001\022"
      "\013\n\007DT_CHAR\020\002\022\014\n\010DT_FLOAT\020\003\022\r\n\tDT_DOUBLE\020"
      "\004\022\013\n\007DT_INT8\020\005\022\014\n\010DT_INT16\020\006\022\014\n\010DT_INT32"
      "\020\007\022\014\n\010DT_INT64\020\010\022\014\n\010DT_UINT8\020\t\022\r\n\tDT_UIN"
      "T16\020\n\022\r\n\tDT_UINT32\020\013\022\r\n\tDT_UINT64\020\014B\003\370\001\001"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 248);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nnf_pbtypes.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_nnf_5fpbtypes_2eproto
namespace nnfusion {
namespace serialize {
const ::google::protobuf::EnumDescriptor* PBType_descriptor() {
  protobuf_nnf_5fpbtypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nnf_5fpbtypes_2eproto::file_level_enum_descriptors[0];
}
bool PBType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace serialize
}  // namespace nnfusion
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
