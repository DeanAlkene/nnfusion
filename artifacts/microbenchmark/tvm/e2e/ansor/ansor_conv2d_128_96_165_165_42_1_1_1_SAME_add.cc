//5280_1_1_990_1_1
//128_96_165_165_42_1_1_SAME
//dim3 grid(5280, 1, 1);
//dim3 block(990, 1, 1);

#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(990) default_function_kernel0(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ T_add, float* __restrict__ input2) {
  float compute[28];
  __shared__ float pad_temp_shared[7920];
  __shared__ float input1_shared[504];
  compute[(0)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 8; ++rc_outer_outer) {
    __syncthreads();
    int2 _1;
      int2 _2;
        int2 _3;
          int2 _4 = make_int2((((((int)blockIdx.x) / 165) * 10454400) + (rc_outer_outer * 326700)), (((((int)blockIdx.x) / 165) * 10454400) + (rc_outer_outer * 326700)));
          int2 _5;
            int2 _6;
              int2 _7 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
              int2 _8 = make_int2(165, 165);
              _6.x = (_7.x%_8.x);
              _6.y = (_7.y%_8.y);
            int2 _9;
              int2 _10 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
              int2 _11 = make_int2(165, 165);
              _9.x = (_10.x/_11.x);
              _9.y = (_10.y/_11.y);
            int2 _12;
            ushort2 _13;
              ushort2 _14;
                ushort2 _15;
                  int2 _16 = make_int2(165, 165);
                  int2 _17 = make_int2(0, 0);
                  _15.x = (_16.x>=_17.x);
                  _15.y = (_16.y>=_17.y);
                ushort2 _18;
                  int2 _19 = make_int2(0, 0);
                  _18.x = (_6.x>=_19.x);
                  _18.y = (_6.y>=_19.y);
                _14.x = (_15.x&&_18.x);
                _14.y = (_15.y&&_18.y);
              ushort2 _20;
                ushort2 _21;
                  int2 _22 = make_int2(165, 165);
                  int2 _23 = make_int2(0, 0);
                  _21.x = (_22.x<_23.x);
                  _21.y = (_22.y<_23.y);
                ushort2 _24;
                  int2 _25 = make_int2(0, 0);
                  _24.x = (_6.x<=_25.x);
                  _24.y = (_6.y<=_25.y);
                _20.x = (_21.x&&_24.x);
                _20.y = (_21.y&&_24.y);
              _13.x = (_14.x||_20.x);
              _13.y = (_14.y||_20.y);
            int2 _26;
              int2 _27 = make_int2(1, 1);
              _26.x = (_9.x-_27.x);
              _26.y = (_9.y-_27.y);
            _12.x = (bool(_13.x)?_9.x:_26.x);
            _12.y = (bool(_13.y)?_9.y:_26.y);
            int2 _28 = make_int2(27225, 27225);
            _5.x = (_12.x*_28.x);
            _5.y = (_12.y*_28.y);
          _3.x = (_4.x+_5.x);
          _3.y = (_4.y+_5.y);
        int2 _29 = make_int2(((((int)blockIdx.x) % 165) * 165), ((((int)blockIdx.x) % 165) * 165));
        _2.x = (_3.x+_29.x);
        _2.y = (_3.y+_29.y);
      int2 _30;
        int2 _31 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
        int2 _32 = make_int2(165, 165);
        _30.x = (_31.x%_32.x);
        _30.y = (_31.y%_32.y);
      int2 _33;
      ushort2 _34;
        ushort2 _35;
          ushort2 _36;
            int2 _37 = make_int2(165, 165);
            int2 _38 = make_int2(0, 0);
            _36.x = (_37.x>=_38.x);
            _36.y = (_37.y>=_38.y);
          ushort2 _39;
            int2 _40 = make_int2(0, 0);
            _39.x = (_30.x>=_40.x);
            _39.y = (_30.y>=_40.y);
          _35.x = (_36.x&&_39.x);
          _35.y = (_36.y&&_39.y);
        ushort2 _41;
          ushort2 _42;
            int2 _43 = make_int2(165, 165);
            int2 _44 = make_int2(0, 0);
            _42.x = (_43.x<_44.x);
            _42.y = (_43.y<_44.y);
          ushort2 _45;
            int2 _46 = make_int2(0, 0);
            _45.x = (_30.x<=_46.x);
            _45.y = (_30.y<=_46.y);
          _41.x = (_42.x&&_45.x);
          _41.y = (_42.y&&_45.y);
        _34.x = (_35.x||_41.x);
        _34.y = (_35.y||_41.y);
      int2 _47;
        int2 _48 = make_int2(165, 165);
        _47.x = (_30.x+_48.x);
        _47.y = (_30.y+_48.y);
      _33.x = (bool(_34.x)?_30.x:_47.x);
      _33.y = (bool(_34.y)?_30.y:_47.y);
      _1.x = (_2.x+_33.x);
      _1.y = (_2.y+_33.y);
    ((float2*)(pad_temp_shared + ((((int)threadIdx.x) * 2))))[0] = make_float2(input0[_1.x],input0[_1.y]);
    int2 _49;
      int2 _50;
        int2 _51;
          int2 _52 = make_int2(((((((int)blockIdx.x) / 165) * 10454400) + (rc_outer_outer * 326700)) + 2613600), ((((((int)blockIdx.x) / 165) * 10454400) + (rc_outer_outer * 326700)) + 2613600));
          int2 _53;
            int2 _54;
              int2 _55 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
              int2 _56 = make_int2(165, 165);
              _54.x = (_55.x%_56.x);
              _54.y = (_55.y%_56.y);
            int2 _57;
              int2 _58 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
              int2 _59 = make_int2(165, 165);
              _57.x = (_58.x/_59.x);
              _57.y = (_58.y/_59.y);
            int2 _60;
            ushort2 _61;
              ushort2 _62;
                ushort2 _63;
                  int2 _64 = make_int2(165, 165);
                  int2 _65 = make_int2(0, 0);
                  _63.x = (_64.x>=_65.x);
                  _63.y = (_64.y>=_65.y);
                ushort2 _66;
                  int2 _67 = make_int2(0, 0);
                  _66.x = (_54.x>=_67.x);
                  _66.y = (_54.y>=_67.y);
                _62.x = (_63.x&&_66.x);
                _62.y = (_63.y&&_66.y);
              ushort2 _68;
                ushort2 _69;
                  int2 _70 = make_int2(165, 165);
                  int2 _71 = make_int2(0, 0);
                  _69.x = (_70.x<_71.x);
                  _69.y = (_70.y<_71.y);
                ushort2 _72;
                  int2 _73 = make_int2(0, 0);
                  _72.x = (_54.x<=_73.x);
                  _72.y = (_54.y<=_73.y);
                _68.x = (_69.x&&_72.x);
                _68.y = (_69.y&&_72.y);
              _61.x = (_62.x||_68.x);
              _61.y = (_62.y||_68.y);
            int2 _74;
              int2 _75 = make_int2(1, 1);
              _74.x = (_57.x-_75.x);
              _74.y = (_57.y-_75.y);
            _60.x = (bool(_61.x)?_57.x:_74.x);
            _60.y = (bool(_61.y)?_57.y:_74.y);
            int2 _76 = make_int2(27225, 27225);
            _53.x = (_60.x*_76.x);
            _53.y = (_60.y*_76.y);
          _51.x = (_52.x+_53.x);
          _51.y = (_52.y+_53.y);
        int2 _77 = make_int2(((((int)blockIdx.x) % 165) * 165), ((((int)blockIdx.x) % 165) * 165));
        _50.x = (_51.x+_77.x);
        _50.y = (_51.y+_77.y);
      int2 _78;
        int2 _79 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
        int2 _80 = make_int2(165, 165);
        _78.x = (_79.x%_80.x);
        _78.y = (_79.y%_80.y);
      int2 _81;
      ushort2 _82;
        ushort2 _83;
          ushort2 _84;
            int2 _85 = make_int2(165, 165);
            int2 _86 = make_int2(0, 0);
            _84.x = (_85.x>=_86.x);
            _84.y = (_85.y>=_86.y);
          ushort2 _87;
            int2 _88 = make_int2(0, 0);
            _87.x = (_78.x>=_88.x);
            _87.y = (_78.y>=_88.y);
          _83.x = (_84.x&&_87.x);
          _83.y = (_84.y&&_87.y);
        ushort2 _89;
          ushort2 _90;
            int2 _91 = make_int2(165, 165);
            int2 _92 = make_int2(0, 0);
            _90.x = (_91.x<_92.x);
            _90.y = (_91.y<_92.y);
          ushort2 _93;
            int2 _94 = make_int2(0, 0);
            _93.x = (_78.x<=_94.x);
            _93.y = (_78.y<=_94.y);
          _89.x = (_90.x&&_93.x);
          _89.y = (_90.y&&_93.y);
        _82.x = (_83.x||_89.x);
        _82.y = (_83.y||_89.y);
      int2 _95;
        int2 _96 = make_int2(165, 165);
        _95.x = (_78.x+_96.x);
        _95.y = (_78.y+_96.y);
      _81.x = (bool(_82.x)?_78.x:_95.x);
      _81.y = (bool(_82.y)?_78.y:_95.y);
      _49.x = (_50.x+_81.x);
      _49.y = (_50.y+_81.y);
    ((float2*)(pad_temp_shared + (((((int)threadIdx.x) * 2) + 1980))))[0] = make_float2(input0[_49.x],input0[_49.y]);
    int2 _97;
      int2 _98;
        int2 _99;
          int2 _100 = make_int2(((((((int)blockIdx.x) / 165) * 10454400) + (rc_outer_outer * 326700)) + 5227200), ((((((int)blockIdx.x) / 165) * 10454400) + (rc_outer_outer * 326700)) + 5227200));
          int2 _101;
            int2 _102;
              int2 _103 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
              int2 _104 = make_int2(165, 165);
              _102.x = (_103.x%_104.x);
              _102.y = (_103.y%_104.y);
            int2 _105;
              int2 _106 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
              int2 _107 = make_int2(165, 165);
              _105.x = (_106.x/_107.x);
              _105.y = (_106.y/_107.y);
            int2 _108;
            ushort2 _109;
              ushort2 _110;
                ushort2 _111;
                  int2 _112 = make_int2(165, 165);
                  int2 _113 = make_int2(0, 0);
                  _111.x = (_112.x>=_113.x);
                  _111.y = (_112.y>=_113.y);
                ushort2 _114;
                  int2 _115 = make_int2(0, 0);
                  _114.x = (_102.x>=_115.x);
                  _114.y = (_102.y>=_115.y);
                _110.x = (_111.x&&_114.x);
                _110.y = (_111.y&&_114.y);
              ushort2 _116;
                ushort2 _117;
                  int2 _118 = make_int2(165, 165);
                  int2 _119 = make_int2(0, 0);
                  _117.x = (_118.x<_119.x);
                  _117.y = (_118.y<_119.y);
                ushort2 _120;
                  int2 _121 = make_int2(0, 0);
                  _120.x = (_102.x<=_121.x);
                  _120.y = (_102.y<=_121.y);
                _116.x = (_117.x&&_120.x);
                _116.y = (_117.y&&_120.y);
              _109.x = (_110.x||_116.x);
              _109.y = (_110.y||_116.y);
            int2 _122;
              int2 _123 = make_int2(1, 1);
              _122.x = (_105.x-_123.x);
              _122.y = (_105.y-_123.y);
            _108.x = (bool(_109.x)?_105.x:_122.x);
            _108.y = (bool(_109.y)?_105.y:_122.y);
            int2 _124 = make_int2(27225, 27225);
            _101.x = (_108.x*_124.x);
            _101.y = (_108.y*_124.y);
          _99.x = (_100.x+_101.x);
          _99.y = (_100.y+_101.y);
        int2 _125 = make_int2(((((int)blockIdx.x) % 165) * 165), ((((int)blockIdx.x) % 165) * 165));
        _98.x = (_99.x+_125.x);
        _98.y = (_99.y+_125.y);
      int2 _126;
        int2 _127 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
        int2 _128 = make_int2(165, 165);
        _126.x = (_127.x%_128.x);
        _126.y = (_127.y%_128.y);
      int2 _129;
      ushort2 _130;
        ushort2 _131;
          ushort2 _132;
            int2 _133 = make_int2(165, 165);
            int2 _134 = make_int2(0, 0);
            _132.x = (_133.x>=_134.x);
            _132.y = (_133.y>=_134.y);
          ushort2 _135;
            int2 _136 = make_int2(0, 0);
            _135.x = (_126.x>=_136.x);
            _135.y = (_126.y>=_136.y);
          _131.x = (_132.x&&_135.x);
          _131.y = (_132.y&&_135.y);
        ushort2 _137;
          ushort2 _138;
            int2 _139 = make_int2(165, 165);
            int2 _140 = make_int2(0, 0);
            _138.x = (_139.x<_140.x);
            _138.y = (_139.y<_140.y);
          ushort2 _141;
            int2 _142 = make_int2(0, 0);
            _141.x = (_126.x<=_142.x);
            _141.y = (_126.y<=_142.y);
          _137.x = (_138.x&&_141.x);
          _137.y = (_138.y&&_141.y);
        _130.x = (_131.x||_137.x);
        _130.y = (_131.y||_137.y);
      int2 _143;
        int2 _144 = make_int2(165, 165);
        _143.x = (_126.x+_144.x);
        _143.y = (_126.y+_144.y);
      _129.x = (bool(_130.x)?_126.x:_143.x);
      _129.y = (bool(_130.y)?_126.y:_143.y);
      _97.x = (_98.x+_129.x);
      _97.y = (_98.y+_129.y);
    ((float2*)(pad_temp_shared + (((((int)threadIdx.x) * 2) + 3960))))[0] = make_float2(input0[_97.x],input0[_97.y]);
    int2 _145;
      int2 _146;
        int2 _147;
          int2 _148 = make_int2(((((((int)blockIdx.x) / 165) * 10454400) + (rc_outer_outer * 326700)) + 7840800), ((((((int)blockIdx.x) / 165) * 10454400) + (rc_outer_outer * 326700)) + 7840800));
          int2 _149;
            int2 _150;
              int2 _151 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
              int2 _152 = make_int2(165, 165);
              _150.x = (_151.x%_152.x);
              _150.y = (_151.y%_152.y);
            int2 _153;
              int2 _154 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
              int2 _155 = make_int2(165, 165);
              _153.x = (_154.x/_155.x);
              _153.y = (_154.y/_155.y);
            int2 _156;
            ushort2 _157;
              ushort2 _158;
                ushort2 _159;
                  int2 _160 = make_int2(165, 165);
                  int2 _161 = make_int2(0, 0);
                  _159.x = (_160.x>=_161.x);
                  _159.y = (_160.y>=_161.y);
                ushort2 _162;
                  int2 _163 = make_int2(0, 0);
                  _162.x = (_150.x>=_163.x);
                  _162.y = (_150.y>=_163.y);
                _158.x = (_159.x&&_162.x);
                _158.y = (_159.y&&_162.y);
              ushort2 _164;
                ushort2 _165;
                  int2 _166 = make_int2(165, 165);
                  int2 _167 = make_int2(0, 0);
                  _165.x = (_166.x<_167.x);
                  _165.y = (_166.y<_167.y);
                ushort2 _168;
                  int2 _169 = make_int2(0, 0);
                  _168.x = (_150.x<=_169.x);
                  _168.y = (_150.y<=_169.y);
                _164.x = (_165.x&&_168.x);
                _164.y = (_165.y&&_168.y);
              _157.x = (_158.x||_164.x);
              _157.y = (_158.y||_164.y);
            int2 _170;
              int2 _171 = make_int2(1, 1);
              _170.x = (_153.x-_171.x);
              _170.y = (_153.y-_171.y);
            _156.x = (bool(_157.x)?_153.x:_170.x);
            _156.y = (bool(_157.y)?_153.y:_170.y);
            int2 _172 = make_int2(27225, 27225);
            _149.x = (_156.x*_172.x);
            _149.y = (_156.y*_172.y);
          _147.x = (_148.x+_149.x);
          _147.y = (_148.y+_149.y);
        int2 _173 = make_int2(((((int)blockIdx.x) % 165) * 165), ((((int)blockIdx.x) % 165) * 165));
        _146.x = (_147.x+_173.x);
        _146.y = (_147.y+_173.y);
      int2 _174;
        int2 _175 = make_int2(((((int)threadIdx.x) * 2))+(1*0), ((((int)threadIdx.x) * 2))+(1*1));
        int2 _176 = make_int2(165, 165);
        _174.x = (_175.x%_176.x);
        _174.y = (_175.y%_176.y);
      int2 _177;
      ushort2 _178;
        ushort2 _179;
          ushort2 _180;
            int2 _181 = make_int2(165, 165);
            int2 _182 = make_int2(0, 0);
            _180.x = (_181.x>=_182.x);
            _180.y = (_181.y>=_182.y);
          ushort2 _183;
            int2 _184 = make_int2(0, 0);
            _183.x = (_174.x>=_184.x);
            _183.y = (_174.y>=_184.y);
          _179.x = (_180.x&&_183.x);
          _179.y = (_180.y&&_183.y);
        ushort2 _185;
          ushort2 _186;
            int2 _187 = make_int2(165, 165);
            int2 _188 = make_int2(0, 0);
            _186.x = (_187.x<_188.x);
            _186.y = (_187.y<_188.y);
          ushort2 _189;
            int2 _190 = make_int2(0, 0);
            _189.x = (_174.x<=_190.x);
            _189.y = (_174.y<=_190.y);
          _185.x = (_186.x&&_189.x);
          _185.y = (_186.y&&_189.y);
        _178.x = (_179.x||_185.x);
        _178.y = (_179.y||_185.y);
      int2 _191;
        int2 _192 = make_int2(165, 165);
        _191.x = (_174.x+_192.x);
        _191.y = (_174.y+_192.y);
      _177.x = (bool(_178.x)?_174.x:_191.x);
      _177.y = (bool(_178.y)?_174.y:_191.y);
      _145.x = (_146.x+_177.x);
      _145.y = (_146.y+_177.y);
    ((float2*)(pad_temp_shared + (((((int)threadIdx.x) * 2) + 5940))))[0] = make_float2(input0[_145.x],input0[_145.y]);
    if (((int)threadIdx.x) < 504) {
      input1_shared[(((int)threadIdx.x))] = input1[(((((((int)threadIdx.x) / 12) * 96) + (rc_outer_outer * 12)) + (((int)threadIdx.x) % 12)))];
    }
    __syncthreads();
    for (int rc_outer_inner = 0; rc_outer_inner < 12; ++rc_outer_inner) {
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[(((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[(((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 12))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 12))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 24))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 24))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 36))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 36))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 48))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 48))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 60))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 60))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 72))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 72))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 84))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 84))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 96))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 96))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 108))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 108))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 120))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 120))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 132))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 132))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 144))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 144))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 156))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((((((int)threadIdx.x) / 495) * 1980) + (rc_outer_inner * 165)) + (((int)threadIdx.x) % 165)) + 3960))] * input1_shared[((((((((int)threadIdx.x) % 495) / 165) * 168) + rc_outer_inner) + 156))]));
    }
  }
  for (int ax1_inner = 0; ax1_inner < 14; ++ax1_inner) {
    T_add[(((((((((int)blockIdx.x) / 165) * 4573800) + ((((int)threadIdx.x) / 165) * 381150)) + (ax1_inner * 27225)) + ((((int)blockIdx.x) % 165) * 165)) + (((int)threadIdx.x) % 165)))] = (compute[(ax1_inner)] + input2[(((((((((int)blockIdx.x) / 165) * 4573800) + ((((int)threadIdx.x) / 165) * 381150)) + (ax1_inner * 27225)) + ((((int)blockIdx.x) % 165) * 165)) + (((int)threadIdx.x) % 165)))]);
    T_add[((((((((((int)blockIdx.x) / 165) * 4573800) + ((((int)threadIdx.x) / 165) * 381150)) + (ax1_inner * 27225)) + ((((int)blockIdx.x) % 165) * 165)) + (((int)threadIdx.x) % 165)) + 2286900))] = (compute[((ax1_inner + 14))] + input2[((((((((((int)blockIdx.x) / 165) * 4573800) + ((((int)threadIdx.x) / 165) * 381150)) + (ax1_inner * 27225)) + ((((int)blockIdx.x) % 165) * 165)) + (((int)threadIdx.x) % 165)) + 2286900))]);
  }
}

